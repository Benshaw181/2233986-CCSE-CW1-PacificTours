@page "/Bookings"
@attribute [Authorize]
@using Microsoft.AspNetCore.Mvc
@using PacificTours.Models
@using PacificTours.Data
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Data.BasketDbContext BasketdbContext
@inject Data.BookingDbContext BookingdbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http

<h3>Your Bookings</h3>

@if (customerBookings.Count <= 0)
{
    <span>No Bookings</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Booking Details</th>
                <th>Price</th>
                <th>Remaining Balance</th>
                <th>Amount Paid</th>
                <th>Starting Date</th>
                <th>Ending Date</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in customerBookings)
            {
                <tr>
                    <td width="10%">@item.BookingDetails</td>
                    <td width="10%">£@item.BookingPrice</td>
                    <td width="10%">£@(item.BookingPrice - item.BookingAmountPaid)</td>
                    <td width="10%">£@item.BookingAmountPaid</td>
                    <td width="5%">@item.BookingStartDate.ToShortDateString()</td>
                    <td width="5%">@item.BookingEndDate.ToShortDateString()</td>
                    <td width="7%">
                        <a href="@ModifyBooking(@item)" class="btn btn-primary" tabindex="-1"
                           role="button" aria-disabled="true">
                            <svg xmlns=http://www.w3.org/2000/svg width="16" height="16" fill="currentColor"
                                 class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-12
.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0
1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-
.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5
0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z">
                                    .
                                </path>
                            </svg> Modify
                        </a>
                        <a @onclick="_=>PayOffBooking(item)" class="btn btn-primary" tabindex="-1"
                           role="button" aria-disabled="true">
                            <svg xmlns=http://www.w3.org/2000/svg width="16" height="16" fill="currentColor"
                                 class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-12
.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0
1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-
.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5
0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z">
                                    .
                                </path>
                            </svg> Complete Payment
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Booking> customerBookings = new List<Booking>();
    string customerEmail;
    string customerId;
    string fullEndpoint;
    bool modifyUnavailable = true;

    [Inject]
    private UserService userService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // get user id via user email address
        var customer = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        customerEmail = customer.User.Identity.Name;
        customerId = await userService.GetUserIdByEmail(customerEmail);

        // work out full location of API
        fullEndpoint = NavigationManager.BaseUri;

        // get userbooking using bookingcontroller
        var result = await Http.GetFromJsonAsync<List<Booking>>(fullEndpoint + $"api/Booking/User/{customerId}");
        if (result != null)
        {
            customerBookings = result;
        }
    }

    private string ModifyBooking(Booking booking)
    {
        return $"Bookings/Modify?id={booking.Id}";
    }

    private async Task PayOffBooking(Booking booking)
    {
        booking.BookingAmountPaid = booking.BookingPrice;
        var result = await Http.PutAsJsonAsync(fullEndpoint + $"api/Booking/{booking.Id}", booking);
    }
}
